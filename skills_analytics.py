# -*- coding: utf-8 -*-
"""Skills Analytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17Gt2nysJO-PXz2VoHap9MxRENGBVcKuy

# Análise Exploratória Skills Analytics
"""

import pandas as pd
import matplotlib.pyplot as plt
import requests
import numpy as np

# Montar o Google Drive
from google.colab import drive
drive.mount('/content/drive')

file_path = "/content/drive/MyDrive/PeopleAnalytics-FIVE/Dados/Mapeamento_Competencias_08nov.csv"
df = pd.read_csv(file_path)

df_equipe = df.iloc[:,1:3] # colunas ID e equipe
df_analy = df.iloc[:,19:26] # colunas BI
df_concat_analy = pd.concat([df_equipe, df_analy], axis = 1)
df_concat_analy.head(4) # imprime somente as quatro primeiras linhas

df_concat_analy.describe() # imprime estatística descritva, contagem de colaboradores, média das competências, desvio padrão, mínimo, máximo, primeira/segunda/terceira partes (25%, 50% e 75%)

"""Analytics PREP _Alteryx teve uma média geral de 2.35, que é o maior nivel de média entre as demais competências em analytics. A tabela a seguir mostra quantos colaboradores responderam em cada nivel (counts) e o percentual correspondente (proporção)."""

df_counts = df_concat_analy['Analy_ PREP _Alteryx'].value_counts()

df_proporcao = df_concat_analy['Analy_ PREP _Alteryx'].value_counts(normalize=True) * 100
df_proporcao = df_proporcao.round(2)

analy_prep_alteryx = pd.DataFrame({'counts': df_counts, 'proporcao': df_proporcao})
analy_prep_alteryx

"""### A seguir vamos fazer um gráfico de barras com a média geral de todos as competências de Analytics"""

df_concat_analy.info()

df_concat_analy.columns

#renomear colunas
df_concat_analy = df_concat_analy.rename(columns={'Analy_ PREP _Alteryx': 'AP_Alteryx',
                                        'Analy_ PREP _SAS': 'AP_SAS',
                                        'Analy_ PREP _Pentaho Data Integration': 'AP_PentahoDataInteg',
                                        'Analy_ PREP _Power Center': 'AP_PowerCenter',
                                        'Analy_ PREP _SAP Analytics Cloud': 'AP_SAPAnalyticsCloud',
                                        'Analy_ PREP _Oracle Data Integration':'AP_OracleDataInteg',
                                        'Analy_ PREP _SQL Server Integration Services': 'AP_SQLServerIntegServ'})

metrics_analy = df_concat_analy.columns[1:].tolist()
metrics_analy #imprime a lista de colunas

#verificar a média do time
df_analy_mean_serie = df_concat_analy[['AP_Alteryx','AP_SAS','AP_PentahoDataInteg','AP_PowerCenter','AP_SAPAnalyticsCloud', 'AP_OracleDataInteg', 'AP_SQLServerIntegServ']].mean().round(2)

df_analy_mean_serie.head(5)

df_analy_mean = df_analy_mean_serie.reset_index()

df_analy_mean = df_analy_mean.rename(columns={'index':'skills', 0:'média'} )
df_analy_mean

fig, ax = plt.subplots(figsize=(10, 8))

x = np.arange(len(df_analy_mean["média"]))

# Plotando o gráfico da 1ª Skill
grafico_1_unidade = ax.bar(x = x, height="média",  data=df_analy_mean)
ax.set_title('Média Geral Analytics Skills', fontsize=16, pad=20)
ax.set_xlabel('Skills', fontsize=14, labelpad=10)
ax.set_ylabel('Média', fontsize=14, labelpad=10)
ax.set_xticks(x)
ax.set_xticklabels(df_analy_mean["skills"], rotation=45, ha='right', rotation_mode='anchor')

# colocando o rótulo nas barras
ax.bar_label(grafico_1_unidade, fmt="%.01f", size=10, label_type="edge")

# Gráfico radar com média geral de todos os colaboradores para Skills Analytics
def person_radar_chart(person, max=5,person_name='Média Geral Analytics Skills'):
    angles=np.linspace(0, 2*np.pi, person.shape[0], endpoint=False)

    stats=np.concatenate((person,[person[0]]))
    angles=np.concatenate((angles,[angles[0]]))
    labels = np.concatenate((df_analy_mean_serie.index.values.tolist(), [df_analy_mean_serie.index.values.tolist()[0]]))

    fig = plt.figure()
    ax = fig.add_subplot(111, polar=True)
    ax.plot(angles, stats, 'o-', linewidth=2)
    ax.fill(angles, stats, alpha=0.25)
    ax.set_thetagrids(angles * 180/np.pi, labels, size=8)
    ax.set_title(person_name)
    ax.set_rlim(0,max)
    ax.grid(True)


#Exibe o gráfico do radar com média geral de todos os colaboradores para Skills Analytics
person_radar_chart(df_analy_mean_serie)

"""### A seguir vamos calcular a média das competências de Analytics por squad"""

df_concat_analy.columns

df_concat_analy_metrics = df_concat_analy[['Squad', 'AP_Alteryx', 'AP_SAS', 'AP_PentahoDataInteg',
       'AP_PowerCenter', 'AP_SAPAnalyticsCloud', 'AP_OracleDataInteg',
       'AP_SQLServerIntegServ']].copy()

"""#### Abaixo temos a tabela e o gráfico de radar com média das competência de Análytics por Squad"""

df_analy_squads_mean = df_concat_analy_metrics.groupby('Squad').mean().round(2)
df_analy_squads_mean

df_analy_squads_mean = df_analy_squads_mean.reset_index()

metrics = df_analy_squads_mean.columns[1:].tolist()

metrics_v2 = np.concatenate((df_analy_mean_serie.index.values.tolist(), [df_analy_mean_serie.index.values.tolist()[0]]))

# Function
def plot_radar_chart(data, metrics, title):
    N = len(metrics)
    theta = np.linspace(0, 2 * np.pi, N, endpoint=False)
    theta = np.concatenate([theta, [theta[0]]])

    fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})

    ax.set_title(title, y=1.15, fontsize=20)
    ax.set_theta_zero_location("N")
    ax.set_theta_direction(-1)
    ax.set_rlabel_position(90)
    ax.spines['polar'].set_zorder(1)
    ax.spines['polar'].set_color('lightgrey')


    color_palette = ['#339F00', '#0500FF', '#9CDADB', '#FF00DE']

    for idx, (i, row) in enumerate(data.iterrows()):
        values = row[metrics].values.flatten().tolist()
        values = values + [values[0]]
        ax.plot(theta, values, linewidth=1.75, linestyle='solid', label=row['Squad'], marker='o', markersize=10, color=color_palette[idx % len(color_palette)])
        ax.fill(theta, values, alpha=0.50, color=color_palette[idx % len(color_palette)])

    plt.yticks([1, 2, 3, 4, 5], ["1", "2", "3", "4", "5"], color="black", size=12)
    plt.xticks(theta, metrics + [metrics[0]], color='black', size=8)
    plt.legend(loc='upper right', bbox_to_anchor=(1.3, 1.1))

    return fig

# Plot
fig = plot_radar_chart(df_analy_squads_mean, metrics, title="Média de Analytics Skills por Squads")
plt.show()